<?php
function node_to_json_menu() {

  $items = array();
  $items['nodejson/get/%'] = array(
    'title' => 'Node JSON',
    'page callback' => 'node_to_json_get_by_id',
    'page arguments' => array(2),
    'access arguments' => array('access node_to_json content'),
    'type' => MENU_CALLBACK
  );
  $items['nodejson/list/%'] = array(
    'title' => 'Node JSON List',
    'page callback' => 'node_to_json_get_list_by_type',
    'page arguments' => array(2),
    'access arguments' => array('access node_to_json content'),
    'type' => MENU_CALLBACK
  );
  return $items;
}
 
function node_to_json_perm() {
   return array('access node_to_json content');
}

function template_preprocess_nodejson(&$variables){
//  echo '<li>';
//  echo $variables['nid'];
//  echo '</li>';
//  exit(0);

  $node = node_load($variables['nid']);
  $variables['title']=$node->title;
  $variables['body'] = $node->body;
  $variables['template_files'][] = 'nodejson-'.$node->type;
  
  // TODO: method for bringing in argument via menu hook
  // TODO: add more explicit validation of $node
  // add additional suggestions for the TPL file
//  $variables['template_files'] = array();
//  $variables['template_files'][] = 'nodejson';
//  if (is_numeric(arg(2))){
//    $node = node_load($variables['nid']);
//    $variables['nid']=$node->nid;
//    $variables['title']=$node->title;
//    $variables['body'] = $node->body;
//    $variables['template_files'][] = 'nodejson-'.$node->type;
//  } else {
//    $variables['template_files'][] = 'nodejson-'.arg(2);
//  }
}

function node_to_json_get_by_id($nid){
//    echo '<pre>';
//    echo $nid;
//    echo '</pre>';
//    exit(0);
  $items = theme('nodejson',arg(2));
  // create a JSON object. The object will contain a property named “nodejson” that will be set with the $items variable. 
  return drupal_json(array('nodejson'=>$items)); // this sets the response header for javascript output
}

function node_to_json_get_list_by_type($node_type = 'project'){
//    echo '<pre>';
//    print_r($node_type);
//    echo '</pre>';
//    exit(0);
  $output = array();
  $types = node_get_types('names');
  if ( !isset($types[$node_type]) ){ //using this rather than array_key_exists for speed reasons
    return drupal_json('Illegal Link. Content Type does not exist.');
  }
  $output[] = '<div class="list type-'.$node_type.'">';
  $result = db_query("SELECT nid FROM node WHERE type = '%s' ", $node_type);
  while ($obj = db_fetch_object ($result)) {
//    _node_to_json_prepare_variables_for($variables,$obj->nid);
//    echo '<pre>';
//    print_r($obj);
//    echo '</pre>';
//    exit(0);
    $output[] = theme('nodejson',$obj->nid);
  }
  $output[] = '</div>';
  return drupal_json(array('nodejson'=>$output)); // this sets the request header for JSON output
}

function node_to_json_preprocess(&$variables,$hook){
  // module maintainers: add $variables based on $variables['nid'] here.
  // module users: implement THEME_preprocess_node_to_json(&$variables) in your theme's template.php
}

function node_to_json_theme($existing, $type, $theme, $path) {
  $hooks = array(
      'node_to_json_javascript' => array(
         'arguments' => array(),
      ),
   );
  $hooks['nodejson'] = array(
      'variables' => array('nid'=>1),
      'template' => 'nodejson',
      'arguments' => array('nid' => NULL),
  );
  return $hooks;
}

function node_to_json_init() {
  theme('node_to_json_javascript');
}

function theme_node_to_json_javascript() {
  drupal_add_js(drupal_get_path('module', 'node_to_json') . '/node_to_json.js');
}

function startsWith($haystack,$needle,$case=true) {
    if($case){return (strcmp(substr($haystack, 0, strlen($needle)),$needle)===0);}
    return (strcasecmp(substr($haystack, 0, strlen($needle)),$needle)===0);
}

function endsWith($haystack,$needle,$case=true) {
    if($case){return (strcmp(substr($haystack, strlen($haystack) - strlen($needle)),$needle)===0);}
    return (strcasecmp(substr($haystack, strlen($haystack) - strlen($needle)),$needle)===0);
}
